- name: Deploy to EC2 to pass this subject
  hosts: localhost
  connection: local

  tasks:
    - name: Launch EC2 instance
      ec2:
        instance_type: t2.small
        image: ami-00ddb0e5626798373
        region: us-east-1
        key_name: accessKey
        vpc_subnet_id: subnet-d3448fe2
        assign_public_ip: yes
        wait: yes
        count: 1
        group: eshop
        aws_access_key: "ASIAWLMA2LRWWWTWVTPR"
        aws_secret_key: "p6URpR5pdcNp7fsCUV1daLzZyce0/VOXVeEhLfGH"
        security_token: "FwoGZXIvYXdzENH//////////wEaDL40vSExsyUYCwRr7SLEAd14wRjEOSW43ef/G+aAEmrdx0/tKLayj10xllKGoBQOUD0EPd3dqxDum3QyWR1BqpFW3603NA/IonIC3PTGdcGwl8Mcd/oWmQ5O6R0FsCJ4nDgFQlsv5bmxBnQ/ZrJn30SXGSLU2+FNq1/d9nZQzicM6VFg6tyhGSYQ/lbsL7ZI8oPB7nLg9EPn+zkMovD1JAgXmrsLez+wrwoFYnHMlMrWI0T74IbnoiZ9cEt7hwdrue+ZwrDqKdTIRt/IX1XHQpFnNAMo75z6/gUyLZryvZmFz3Sai/3n6HmD+uHhMQJ9cG280buLKL0Nsmp6wvl9pli8XTGix3GYwg=="
      register: ec2

    - name: Add instance
      add_host: hostname={{ item.public_dns_name }} groupname=launched

      with_items: '{{ec2.instances}}'
    - name: accept new ssh fingerprints
      shell: ssh-keyscan -H {{ item.public_ip }} >> /home/circleci/.ssh/known_hosts
      with_items: '{{ ec2.instances }}'

    - name: Wait for SSH
      wait_for: host={{ item.public_dns_name }} port=22 delay=30 timeout=300 state=started
      with_items: '{{ec2.instances}}'

- name: Configure EC2
  hosts: launched
  connection: ssh

  tasks:
    - name: Installing docker
      apt:
        name: docker.io
        state: present
        update_cache: yes
      become: yes
    - service:
        name: Docker
        state: started
        enabled: yes
      become: yes
    - name: Getting files from GIT repository
      git:
        repo: 'https://github.com/janpapez123/trying.git'
        dest: ./app
    - name: Building docker with eshop
      shell: cd app && docker build -t myeshop:latest .
      become: yes
    - name: Running Docker with eshop
      shell: docker run -p 80:3000 myeshop
      async: 70
      poll: 0
      become: yes
    - wait_for:
        port: 80
